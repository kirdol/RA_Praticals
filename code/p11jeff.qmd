---
output: html_document
editor_options: 
  chunk_output_type: console
---
```{r}
crypto_data <- read.csv(here::here("data", "crypto_data.csv"))
```

```{r}

# load the required packages and install them if they are not.
source(here::here("code","setup.R"))

library(fpp3)
library(urca)
library(ggplot2)
library(patchwork)
library(nortest)
```

## Part 1 - Financial returns and normality

### a)
```{r}
#Adding a "time" column
data <- crypto_data %>% 
  mutate(Time = row_number())

#Transforming into a tsibble
data <- as_tsibble(data, index = Time)

#Testing for stationarity
data |> features(Bitcoin, unitroot_kpss)
```
The p-value of 1% indicates evidence to reject the null hypothesis.

### b)
```{r}
# Function to calculate negative log returns
negative_log_returns <- function(prices) {
  # Calculate log returns
  log_returns <- diff(log(prices))
  # Return the negative log returns
  -log_returns
}

# Applying the function to Bitcoin prices
negative_log_ret <- negative_log_returns(data$Bitcoin)

# Add the negative log returns to the data for plotting (excluding the first row due to diff)
data <- data[-1, ]  # Remove the first row due to differencing
data$neg_log_ret <- negative_log_ret

# Plot the negative log returns
ggplot(data, aes(x = 1:nrow(data), y = neg_log_ret)) +
  geom_line(color = 'red') +
  labs(title = "Negative Log Returns of Bitcoin Prices", x = "Time", y = "Negative Log Returns") +
  theme_minimal()

# KPSS Test to assess stationarity of the negative log returns
kpss_test_neg_log_ret <- ur.kpss(negative_log_ret, type = "mu")
summary(kpss_test_neg_log_ret)

# Plot the raw Bitcoin prices and negative log returns on the same scale
# Normalize both series for comparison (scaling to a common range)
data$scaled_bitcoin <- scale(data$Bitcoin)
data$scaled_neg_log_ret <- scale(data$neg_log_ret)

# Plot scaled Bitcoin prices and negative log returns on the same graph
ggplot(data) +
  geom_line(aes(x = 1:nrow(data), y = scaled_bitcoin), color = 'blue', linetype = "dashed") +
  geom_line(aes(x = 1:nrow(data), y = scaled_neg_log_ret), color = 'red') +
  labs(title = "Comparison of Scaled Bitcoin Prices and Negative Log Returns",
       x = "Time", y = "Scaled Values") +
  theme_minimal() +
  scale_color_manual(values=c("blue", "red")) +
  theme(legend.position="bottom")
```

### c)

```{r}
# Histogram of negative log returns
ggplot(data, aes(x = neg_log_ret)) +
  geom_histogram(bins = 30, fill = "red", alpha = 0.7) +
  labs(title = "Histogram of Negative Log Returns of Bitcoin Prices", 
       x = "Negative Log Returns", y = "Frequency") +
  theme_minimal()

# Anderson-Darling test for normality on negative log returns
ad_test_result <- ad.test(data$neg_log_ret)


print(ad_test_result)
```

The p-value is lower than 0.05, so the distrubtion is not normally distributed.

### d)

```{r}

```


## Part 2 - Financial time series, heteroskedasticity and the random walk hypothesis

```{r}

```

