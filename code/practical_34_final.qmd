
{{< pagebreak >}}

## Part 4: Return Period & Probabilities of New Record High Temperatures

In this part, we will discuss the return periods & probability analysis of having a new record of heatwaves in the cities of Geneva, Säntis and Lugano. As seen when comparing the Block Maxima and the Peaks-over-Threshol approaches, the Block Maxima one seems to be more accurate to use. Thus, we will only use this approach when calculating the return period and the probabilities of obtaining a new record of temperature for 1, 3 and 10 years. To begin with, we will take the code from part 3 to obtain the GEV distribution for all cities.

```{r, echo = FALSE, include = FALSE}
# load the required packages and install them if they are not.
source(here::here("code","setup.R"))

# Load the data
data_temp <- read.csv(here("data", "Cleaned_Stations_Data.csv"))
```

```{r, echo = FALSE, include = FALSE}
# Filter data for all cities and remove any rows with NA in TMAX
# Geneva
data_geneva <- data_temp %>%
  filter(!is.na(TMAX)) %>%
  filter(NAME == "Genève") %>%
  dplyr::select(DATE, TMAX) %>%
  mutate(DATE = as.Date(DATE))

# Santïs
data_santis <- data_temp %>%
  filter(!is.na(TMAX)) %>%
  filter(NAME == "Saentis") %>%
  dplyr::select(DATE, TMAX) %>%
  mutate(DATE = as.Date(DATE))

# Lugano
data_lugano <- data_temp %>%
  filter(!is.na(TMAX)) %>%
  filter(NAME == "Lugano") %>%
  dplyr::select(DATE, TMAX) %>%
  mutate(DATE = as.Date(DATE))
```

### Block Maxima Approach (GEV Distribution)

See part 3 for the code.

```{r, echo = FALSE, include = FALSE}
# Calculate annual maximum temperatures
# Geneva
annual_maxima_geneva <- data_geneva %>%
  mutate(Year = year(DATE)) %>%
  group_by(Year) %>%
  summarize(MaxTemp = max(TMAX), .groups = 'drop')

# Santïs
annual_maxima_santis <- data_santis %>%
  mutate(Year = year(DATE)) %>%
  group_by(Year) %>%
  summarize(MaxTemp = max(TMAX), .groups = 'drop')

# Lugano
annual_maxima_Lugano <- data_lugano %>%
  mutate(Year = year(DATE)) %>%
  group_by(Year) %>%
  summarize(MaxTemp = max(TMAX), .groups = 'drop')
```

```{r, echo = FALSE, include = FALSE}
# Fit a GEV distribution to the annual maxima
# Genève
gev_fit_geneva <- fevd(annual_maxima_geneva$MaxTemp, type = "GEV")

# Santïs
gev_fit_santis <- fevd(annual_maxima_santis$MaxTemp, type = "GEV")

# Lugano
gev_fit_Lugano <- fevd(annual_maxima_Lugano$MaxTemp, type = "GEV")
```

```{r, echo = FALSE, include = FALSE}
# Diagnostic plots for the GEV fit
# Geneva
par(mfrow = c(2, 2))
plot(gev_fit_geneva)

# Santïs
par(mfrow = c(2, 2))
plot(gev_fit_santis)

# Lugano
par(mfrow = c(2, 2))
plot(gev_fit_Lugano)
```

```{r, echo = FALSE, include = FALSE}
# Calculate return levels for 10, 50, and 100-year return periods
# Genève
gev_return_levels_geneva <- return.level(gev_fit_geneva, return.period = c(10, 50, 100))

# Santïs
gev_return_levels_santis <- return.level(gev_fit_santis, return.period = c(10, 50, 100))

# Lugano
gev_return_levels_Lugano <- return.level(gev_fit_Lugano, return.period = c(10, 50, 100))
```

### Peaks-over-Threshold Approach (GPD Distribution)

See part 3 for the code.

```{r, echo = FALSE, include = FALSE}
# Filter the data for the summer months (June to September)
# Geneva
geneva_summer <- subset(data_geneva, format(DATE, "%m") %in% c("06", "07", "08", "09"))

# Santis
santis_summer <- subset(data_santis, format(DATE, "%m") %in% c("06", "07", "08", "09"))

# Lugano
lugano_summer <- subset(data_lugano, format(DATE, "%m") %in% c("06", "07", "08", "09"))
```

```{r, echo = FALSE, include = FALSE}
# Define a threshold at the 95th percentile
# Geneva
threshold_geneva <- quantile(geneva_summer$TMAX, 0.95)

# Santïs
threshold_santis <- quantile(santis_summer$TMAX, 0.95)

# Lugano
threshold_lugano <- quantile(lugano_summer$TMAX, 0.95)
```

```{r, echo = FALSE, include = FALSE}
# Number of exceedances over the threshold
# Geneva
num_exceedances_geneva <- sum(geneva_summer$TMAX > threshold_geneva)

# Santïs
num_exceedances_santis <- sum(santis_summer$TMAX > threshold_santis)

# Lugano
num_exceedances_Lugano <- sum(lugano_summer$TMAX > threshold_lugano)
```

```{r, echo = FALSE, include = FALSE}
# Decluster the data using the chosen threshold for each station
# Genava
geneva_declustered <- extRemes::decluster(geneva_summer$TMAX, threshold = threshold_geneva, run.length = 1)

# Santïs
santis_declustered <- extRemes::decluster(santis_summer$TMAX, threshold = threshold_santis, run.length = 1)

# Lugano
lugano_declustered <- extRemes::decluster(lugano_summer$TMAX, threshold = threshold_lugano, run.length = 1)
```

```{r, echo = FALSE, include = FALSE}
# Add the declustered data to the corresponding datasets
# Geneva
geneva_summer$declustered <- ifelse(geneva_summer$TMAX >= threshold_geneva, geneva_declustered, NA)

# Santïs
santis_summer$declustered <- ifelse(santis_summer$TMAX >= threshold_santis, santis_declustered, NA)

# Lugano
lugano_summer$declustered <- ifelse(lugano_summer$TMAX >= threshold_lugano, lugano_declustered, NA)
```

```{r, echo = FALSE, include = FALSE}
# Extract declustered extreme values
# Geneva
extreme_values_geneva <- geneva_summer[["declustered"]][!is.na(geneva_summer[["declustered"]])]

# Santïs
extreme_values_santis <- santis_summer[["declustered"]][!is.na(santis_summer[["declustered"]])]

# Lugano
extreme_values_lugano <- lugano_summer[["declustered"]][!is.na(lugano_summer[["declustered"]])]
```

```{r, echo = FALSE, include = FALSE}
# Fit a GPD to the exceedances
# Genève
gpd_fit_geneva <- fevd(extreme_values_geneva, threshold = threshold_geneva, type = "GP")

# Santïs
gpd_fit_santis <- fevd(extreme_values_santis, threshold = threshold_santis, type = "GP")

# Lugano
gpd_fit_lugano <- fevd(extreme_values_lugano, threshold = threshold_lugano, type = "GP")
```

```{r, echo = FALSE, include = FALSE}
# Diagnostic plots for the GPD fit
# Genève
par(mfrow = c(2, 2))
plot(gpd_fit_geneva)

# Santïs
par(mfrow = c(2, 2))
plot(gpd_fit_santis)

# Lugano
par(mfrow = c(2, 2))
plot(gpd_fit_lugano)
```

```{r, echo = FALSE, include = FALSE}
# Calculate return levels for 10, 50, and 100-year return periods
# Geneva
gpd_return_levels_geneva <- return.level(gpd_fit_geneva, return.period = c(10, 50, 100))

# Santïs
gpd_return_levels_santis <- return.level(gpd_fit_santis, return.period = c(10, 50, 100))

# Lugano
gpd_return_levels_Lugano <- return.level(gpd_fit_lugano, return.period = c(10, 50, 100))
```


::: {.callout-note icon="false"}
## Question

Can a Generalized Extreme Value (GEV) distribution accurately model annual maximum temperatures in Switzerland?
:::

### Return Period

Now, we will analyse the return period for each city. The return period is the expected time (here, in years) between occurrences of an extreme event to be at least as extreme as a given value.

```{r}
# Load required library
library(extRemes)

# Extract GEV parameters for Geneva
location_geneva <- gev_fit_geneva$results$par["location"]
scale_geneva <- gev_fit_geneva$results$par["scale"]
shape_geneva <- gev_fit_geneva$results$par["shape"]

# Extract GEV parameters for Säntis
location_santis <- gev_fit_santis$results$par["location"]
scale_santis <- gev_fit_santis$results$par["scale"]
shape_santis <- gev_fit_santis$results$par["shape"]

# Extract GEV parameters for Lugano
location_lugano <- gev_fit_Lugano$results$par["location"]
scale_lugano <- gev_fit_Lugano$results$par["scale"]
shape_lugano <- gev_fit_Lugano$results$par["shape"]

# Set the temperature threshold
temp_threshold <- 35
temp_threshold_santis <- 19

# Function to calculate return period
calculate_return_period <- function(location, scale, shape, temp_threshold) {
  cdf_value <- pevd(temp_threshold, loc = location, scale = scale, shape = shape, type = "GEV")
  return_period <- 1 / (1 - cdf_value)
  return(return_period)
}

# Calculate return periods
return_period_geneva <- calculate_return_period(location_geneva, scale_geneva, shape_geneva, temp_threshold)
return_period_santis <- calculate_return_period(location_santis, scale_santis, shape_santis, temp_threshold_santis)
return_period_lugano <- calculate_return_period(location_lugano, scale_lugano, shape_lugano, temp_threshold)

# Print the results
cat("The return period for 35°C in Geneva is approximately", round(return_period_geneva, 2), "years.\n")
cat("The return period for 35°C in Säntis is approximately", round(return_period_santis, 2), "years.\n")
cat("The return period for 35°C in Lugano is approximately", round(return_period_lugano, 2), "years.\n")
```

As a result, we can observe that the return period is around 4.16 years in Geneva, Inf for Säntis and 14.04 years for Lugano.

### Probability of New Record High Temperature

Using the previously fitted model

```{r}
# Historical record highs for each city (replace with actual values)
record_high_geneva <- max(annual_maxima_geneva$MaxTemp)
record_high_santis <- max(annual_maxima_santis$MaxTemp)
record_high_lugano <- max(annual_maxima_Lugano$MaxTemp)

# Function to calculate the probability of a new record high
calculate_new_record_probability <- function(location, scale, shape, record_high, years) {
  # Probability of not exceeding the record high in 1 year
  prob_not_exceed <- pevd(record_high, loc = location, scale = scale, shape = shape, type = "GEV")
  # Probability of exceeding the record high in the given time horizon
  prob_exceed <- 1 - (prob_not_exceed^years)
  return(prob_exceed)
}

# Calculate probabilities for Geneva
prob_new_record_geneva_1yr <- calculate_new_record_probability(location_geneva, scale_geneva, shape_geneva, record_high_geneva, 1)
prob_new_record_geneva_3yr <- calculate_new_record_probability(location_geneva, scale_geneva, shape_geneva, record_high_geneva, 3)
prob_new_record_geneva_10yr <- calculate_new_record_probability(location_geneva, scale_geneva, shape_geneva, record_high_geneva, 10)

# Calculate probabilities for Säntis
prob_new_record_santis_1yr <- calculate_new_record_probability(location_santis, scale_santis, shape_santis, record_high_santis, 1)
prob_new_record_santis_3yr <- calculate_new_record_probability(location_santis, scale_santis, shape_santis, record_high_santis, 3)
prob_new_record_santis_10yr <- calculate_new_record_probability(location_santis, scale_santis, shape_santis, record_high_santis, 10)

# Calculate probabilities for Lugano
prob_new_record_lugano_1yr <- calculate_new_record_probability(location_lugano, scale_lugano, shape_lugano, record_high_lugano, 1)
prob_new_record_lugano_3yr <- calculate_new_record_probability(location_lugano, scale_lugano, shape_lugano, record_high_lugano, 3)
prob_new_record_lugano_10yr <- calculate_new_record_probability(location_lugano, scale_lugano, shape_lugano, record_high_lugano, 10)

# Print the results
cat("Probability of a new record high in Geneva:\n",
    "1 year:", round(prob_new_record_geneva_1yr, 4), "\n",
    "3 years:", round(prob_new_record_geneva_3yr, 4), "\n",
    "10 years:", round(prob_new_record_geneva_10yr, 4), "\n\n")

cat("Probability of a new record high in Säntis:\n",
    "1 year:", round(prob_new_record_santis_1yr, 4), "\n",
    "3 years:", round(prob_new_record_santis_3yr, 4), "\n",
    "10 years:", round(prob_new_record_santis_10yr, 4), "\n\n")

cat("Probability of a new record high in Lugano:\n",
    "1 year:", round(prob_new_record_lugano_1yr, 4), "\n",
    "3 years:", round(prob_new_record_lugano_3yr, 4), "\n",
    "10 years:", round(prob_new_record_lugano_10yr, 4), "\n")
```

### Results

As a result, we can observe that ...
